{"ast":null,"code":"import _slicedToArray from \"/Users/xhzy/Desktop/vikingship/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/xhzy/Desktop/vikingship/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/xhzy/Desktop/vikingship/src/components/AutoComplete/autoComplete.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport Input from '../Input/input';\nimport Icon from '../Icon/icon';\nimport Transition from '../Transition/transition';\nimport useDebounce from '../../hooks/useDebounce';\nimport useClickOutside from '../../hooks/useClickOutside';\nexport const AutoComplete = props => {\n  const fetchSuggestions = props.fetchSuggestions,\n        onSelect = props.onSelect,\n        value = props.value,\n        renderOption = props.renderOption,\n        restProps = _objectWithoutProperties(props, [\"fetchSuggestions\", \"onSelect\", \"value\", \"renderOption\"]);\n\n  const _useState = useState(value),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputValue = _useState2[0],\n        setInputValue = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        suggestions = _useState4[0],\n        setSugestions = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        showDropdown = _useState8[0],\n        setShowDropdown = _useState8[1];\n\n  const _useState9 = useState(-1),\n        _useState10 = _slicedToArray(_useState9, 2),\n        highlightIndex = _useState10[0],\n        setHighlightIndex = _useState10[1];\n\n  const triggerSearch = useRef(false);\n  const componentRef = useRef(null);\n  const debouncedValue = useDebounce(inputValue, 300);\n  useClickOutside(componentRef, () => {\n    setSugestions([]);\n  });\n  useEffect(() => {\n    if (debouncedValue && triggerSearch.current) {\n      setSugestions([]);\n      const results = fetchSuggestions(debouncedValue);\n\n      if (results instanceof Promise) {\n        setLoading(true);\n        results.then(data => {\n          setLoading(false);\n          setSugestions(data);\n\n          if (data.length > 0) {\n            setShowDropdown(true);\n          }\n        });\n      } else {\n        setSugestions(results);\n        setShowDropdown(true);\n\n        if (results.length > 0) {\n          setShowDropdown(true);\n        }\n      }\n    } else {\n      setShowDropdown(false);\n    }\n\n    setHighlightIndex(-1);\n  }, [debouncedValue, fetchSuggestions]);\n\n  const highlight = index => {\n    if (index < 0) index = 0;\n\n    if (index >= suggestions.length) {\n      index = suggestions.length - 1;\n    }\n\n    setHighlightIndex(index);\n  };\n\n  const handleKeyDown = e => {\n    switch (e.keyCode) {\n      case 13:\n        if (suggestions[highlightIndex]) {\n          handleSelect(suggestions[highlightIndex]);\n        }\n\n        break;\n\n      case 38:\n        highlight(highlightIndex - 1);\n        break;\n\n      case 40:\n        highlight(highlightIndex + 1);\n        break;\n\n      case 27:\n        setShowDropdown(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleChange = e => {\n    const value = e.target.value.trim();\n    setInputValue(value);\n    triggerSearch.current = true;\n  };\n\n  const handleSelect = item => {\n    setInputValue(item.value);\n    setShowDropdown(false);\n\n    if (onSelect) {\n      onSelect(item);\n    }\n\n    triggerSearch.current = false;\n  };\n\n  const renderTemplate = item => {\n    return renderOption ? renderOption(item) : item.value;\n  };\n\n  const generateDropdown = () => {\n    return React.createElement(Transition, {\n      in: showDropdown || loading,\n      animation: \"zoom-in-top\",\n      timeout: 300,\n      onExited: () => {\n        setSugestions([]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"viking-suggestion-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      className: \"suggstions-loading-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: \"spinner\",\n      spin: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), suggestions.map((item, index) => {\n      const cnames = classNames('suggestion-item', {\n        'is-active': index === highlightIndex\n      });\n      return React.createElement(\"li\", {\n        key: index,\n        className: cnames,\n        onClick: () => handleSelect(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, renderTemplate(item));\n    })));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"viking-auto-complete\",\n    ref: componentRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Input, Object.assign({\n    value: inputValue,\n    onChange: handleChange,\n    onKeyDown: handleKeyDown\n  }, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), generateDropdown());\n};\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/xhzy/Desktop/vikingship/src/components/AutoComplete/autoComplete.tsx"],"names":["React","useState","useEffect","useRef","classNames","Input","Icon","Transition","useDebounce","useClickOutside","AutoComplete","props","fetchSuggestions","onSelect","value","renderOption","restProps","inputValue","setInputValue","suggestions","setSugestions","loading","setLoading","showDropdown","setShowDropdown","highlightIndex","setHighlightIndex","triggerSearch","componentRef","debouncedValue","current","results","Promise","then","data","length","highlight","index","handleKeyDown","e","keyCode","handleSelect","handleChange","target","trim","item","renderTemplate","generateDropdown","map","cnames"],"mappings":"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","sourcesContent":["import React, { FC, useState, ChangeEvent, KeyboardEvent, ReactElement, useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport Input, { InputProps } from '../Input/input'\nimport Icon from '../Icon/icon'\nimport Transition from '../Transition/transition'\nimport useDebounce from '../../hooks/useDebounce'\nimport useClickOutside from '../../hooks/useClickOutside'\ninterface DataSourceObject {\n  value: string;\n}\nexport type DataSourceType<T = {}> = T & DataSourceObject\nexport interface AutoCompleteProps extends Omit<InputProps, 'onSelect'> {\n  fetchSuggestions: (str: string) => DataSourceType[] | Promise<DataSourceType[]>;\n  onSelect?: (item: DataSourceType) => void;\n  renderOption?: (item: DataSourceType) => ReactElement;\n}\n\nexport const AutoComplete: FC<AutoCompleteProps> = (props) => {\n  const {\n    fetchSuggestions,\n    onSelect,\n    value,\n    renderOption,\n    ...restProps\n  } = props\n\n  const [ inputValue, setInputValue ] = useState(value as string)\n  const [ suggestions, setSugestions ] = useState<DataSourceType[]>([])\n  const [ loading, setLoading ] = useState(false)\n  const [ showDropdown, setShowDropdown] = useState(false)\n  const [ highlightIndex, setHighlightIndex] = useState(-1)\n  const triggerSearch = useRef(false)\n  const componentRef = useRef<HTMLDivElement>(null)\n  const debouncedValue = useDebounce(inputValue, 300)\n  useClickOutside(componentRef, () => { setSugestions([])})\n  useEffect(() => {\n    if (debouncedValue && triggerSearch.current) {\n      setSugestions([])\n      const results = fetchSuggestions(debouncedValue)\n      if (results instanceof Promise) {\n        setLoading(true)\n        results.then(data => {\n          setLoading(false)\n          setSugestions(data)\n          if (data.length > 0) {\n            setShowDropdown(true)\n          }\n        })\n      } else {\n        setSugestions(results)\n        setShowDropdown(true)\n        if (results.length > 0) {\n          setShowDropdown(true)\n        } \n      }\n    } else {\n      setShowDropdown(false)\n    }\n    setHighlightIndex(-1)\n  }, [debouncedValue, fetchSuggestions])\n  const highlight = (index: number) => {\n    if (index < 0) index = 0\n    if (index >= suggestions.length) {\n      index = suggestions.length - 1\n    }\n    setHighlightIndex(index)\n  }\n  const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    switch(e.keyCode) {\n      case 13:\n        if (suggestions[highlightIndex]) {\n          handleSelect(suggestions[highlightIndex])\n        }\n        break\n      case 38:\n        highlight(highlightIndex - 1)\n        break\n      case 40:\n        highlight(highlightIndex + 1)\n        break\n      case 27:\n        setShowDropdown(false)\n        break\n      default:\n        break\n    }\n  }\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim()\n    setInputValue(value)\n    triggerSearch.current = true\n  }\n  const handleSelect = (item: DataSourceType) => {\n    setInputValue(item.value)\n    setShowDropdown(false)\n    if (onSelect) {\n      onSelect(item)\n    }\n    triggerSearch.current = false\n  }\n  const renderTemplate = (item: DataSourceType) => {\n    return renderOption ? renderOption(item) : item.value\n  }\n  const generateDropdown = () => {\n    return (\n      <Transition\n        in={showDropdown || loading}\n        animation=\"zoom-in-top\"\n        timeout={300}\n        onExited={() => {setSugestions([])}}\n      >\n        <ul className=\"viking-suggestion-list\">\n          { loading &&\n            <div className=\"suggstions-loading-icon\">\n              <Icon icon=\"spinner\" spin/>\n            </div>\n          }\n          {suggestions.map((item, index) => {\n            const cnames = classNames('suggestion-item', {\n              'is-active': index === highlightIndex\n            })\n            return (\n              <li key={index} className={cnames} onClick={() => handleSelect(item)}>\n                {renderTemplate(item)}\n              </li>\n            )\n          })}\n        </ul>\n      </Transition>\n    )\n  }\n  return (\n    <div className=\"viking-auto-complete\" ref={componentRef}>\n      <Input\n        value={inputValue}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        {...restProps}\n      />\n      {generateDropdown()}\n    </div>\n  )\n}\n\nexport default AutoComplete;\n\n"]},"metadata":{},"sourceType":"module"}