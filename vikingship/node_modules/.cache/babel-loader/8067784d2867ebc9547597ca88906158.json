{"ast":null,"code":"import _slicedToArray from \"/Users/xhzy/Desktop/vikingship/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/xhzy/Desktop/vikingship/src/components/Upload/dragger.tsx\";\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nexport const Dragger = props => {\n  const onFile = props.onFile,\n        children = props.children;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        dragOver = _useState2[0],\n        setDragOver = _useState2[1];\n\n  const klass = classNames('viking-uploader-dragger', {\n    'is-dragover': dragOver\n  });\n\n  const handleDrop = e => {\n    e.preventDefault();\n    setDragOver(false);\n    onFile(e.dataTransfer.files);\n  };\n\n  const handleDrag = (e, over) => {\n    e.preventDefault();\n    setDragOver(over);\n  };\n\n  return React.createElement(\"div\", {\n    className: klass,\n    onDragOver: e => {\n      handleDrag(e, true);\n    },\n    onDragLeave: e => {\n      handleDrag(e, false);\n    },\n    onDrop: handleDrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, children);\n};\nexport default Dragger;","map":{"version":3,"sources":["/Users/xhzy/Desktop/vikingship/src/components/Upload/dragger.tsx"],"names":["React","useState","classNames","Dragger","props","onFile","children","dragOver","setDragOver","klass","handleDrop","e","preventDefault","dataTransfer","files","handleDrag","over"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAA+C,OAA/C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAMA,OAAO,MAAMC,OAAyB,GAAIC,KAAD,IAAW;AAAA,QAC1CC,MAD0C,GACrBD,KADqB,CAC1CC,MAD0C;AAAA,QAClCC,QADkC,GACrBF,KADqB,CAClCE,QADkC;;AAAA,oBAEhBL,QAAQ,CAAC,KAAD,CAFQ;AAAA;AAAA,QAE1CM,QAF0C;AAAA,QAEhCC,WAFgC;;AAGlD,QAAMC,KAAK,GAAGP,UAAU,CAAC,yBAAD,EAA4B;AAClD,mBAAeK;AADmC,GAA5B,CAAxB;;AAGA,QAAMG,UAAU,GAAIC,CAAD,IAA+B;AAChDA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAH,IAAAA,MAAM,CAACM,CAAC,CAACE,YAAF,CAAeC,KAAhB,CAAN;AACD,GAJD;;AAKA,QAAMC,UAAU,GAAG,CAACJ,CAAD,EAA4BK,IAA5B,KAA8C;AAC/DL,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,WAAW,CAACQ,IAAD,CAAX;AACD,GAHD;;AAIA,SACE;AACE,IAAA,SAAS,EAAEP,KADb;AAEE,IAAA,UAAU,EAAEE,CAAC,IAAI;AAAEI,MAAAA,UAAU,CAACJ,CAAD,EAAI,IAAJ,CAAV;AAAoB,KAFzC;AAGE,IAAA,WAAW,EAAEA,CAAC,IAAI;AAAEI,MAAAA,UAAU,CAACJ,CAAD,EAAI,KAAJ,CAAV;AAAqB,KAH3C;AAIE,IAAA,MAAM,EAAED,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGJ,QANH,CADF;AAUD,CAzBM;AA2BP,eAAeH,OAAf","sourcesContent":["import React, { FC, useState, DragEvent } from 'react'\nimport classNames from 'classnames'\n\ninterface DraggerProps {\n  onFile: (files: FileList) => void;\n}\n\nexport const Dragger: FC<DraggerProps> = (props) => {\n  const { onFile, children } = props\n  const [ dragOver, setDragOver ] = useState(false)\n  const klass = classNames('viking-uploader-dragger', {\n    'is-dragover': dragOver\n  })\n  const handleDrop = (e: DragEvent<HTMLElement>) => {\n    e.preventDefault()\n    setDragOver(false)\n    onFile(e.dataTransfer.files)\n  }\n  const handleDrag = (e: DragEvent<HTMLElement>, over: boolean) => {\n    e.preventDefault()\n    setDragOver(over)\n  }\n  return (\n    <div \n      className={klass}\n      onDragOver={e => { handleDrag(e, true)}}\n      onDragLeave={e => { handleDrag(e, false)}}\n      onDrop={handleDrop}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Dragger;"]},"metadata":{},"sourceType":"module"}